import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IHonzon, IHonzonInterface } from "../../../contracts/honzon/IHonzon";
export declare class IHonzon__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "int128";
            readonly name: "collateralAdjustment";
            readonly type: "int128";
        }, {
            readonly indexed: false;
            readonly internalType: "int128";
            readonly name: "debitAdjustment";
            readonly type: "int128";
        }];
        readonly name: "AdjustedLoan";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }];
        readonly name: "ClosedLoanByDex";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }, {
            readonly internalType: "int128";
            readonly name: "collateralAdjustment";
            readonly type: "int128";
        }, {
            readonly internalType: "int128";
            readonly name: "debitAdjustment";
            readonly type: "int128";
        }];
        readonly name: "adjustLoan";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxCollateralAmount";
            readonly type: "uint256";
        }];
        readonly name: "closeLoanByDex";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }];
        readonly name: "getCollateralParameters";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "who";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }];
        readonly name: "getCurrentCollateralRatio";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }];
        readonly name: "getDebitExchangeRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "who";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }];
        readonly name: "getPosition";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IHonzonInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IHonzon;
}
