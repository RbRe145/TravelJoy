import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IEVMAccounts, IEVMAccountsInterface } from "../../../contracts/evm-accounts/IEVMAccounts";
export declare class IEVMAccounts__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "accountId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "evmAddress";
            readonly type: "address";
        }];
        readonly name: "ClaimAccount";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "accountId";
            readonly type: "bytes32";
        }];
        readonly name: "claimDefaultEvmAddress";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "evmAddress";
            readonly type: "address";
        }];
        readonly name: "getAccountId";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "accountId";
            readonly type: "bytes32";
        }];
        readonly name: "getEvmAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IEVMAccountsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IEVMAccounts;
}
