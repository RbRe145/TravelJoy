"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IDEX__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "maxAmountA",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "maxAmountB",
                type: "uint256",
            },
        ],
        name: "AddedLiquidity",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "removeShare",
                type: "uint256",
            },
        ],
        name: "RemovedLiquidity",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address[]",
                name: "path",
                type: "address[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "supplyAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "targetAmount",
                type: "uint256",
            },
        ],
        name: "Swaped",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "maxAmountA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxAmountB",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minShareIncrement",
                type: "uint256",
            },
        ],
        name: "addLiquidity",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
        ],
        name: "getLiquidityPool",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
        ],
        name: "getLiquidityTokenAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "path",
                type: "address[]",
            },
            {
                internalType: "uint256",
                name: "targetAmount",
                type: "uint256",
            },
        ],
        name: "getSwapSupplyAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "path",
                type: "address[]",
            },
            {
                internalType: "uint256",
                name: "supplyAmount",
                type: "uint256",
            },
        ],
        name: "getSwapTargetAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "removeShare",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minWithdrawnA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minWithdrawnB",
                type: "uint256",
            },
        ],
        name: "removeLiquidity",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "path",
                type: "address[]",
            },
            {
                internalType: "uint256",
                name: "supplyAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minTargetAmount",
                type: "uint256",
            },
        ],
        name: "swapWithExactSupply",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "path",
                type: "address[]",
            },
            {
                internalType: "uint256",
                name: "targetAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxSupplyAmount",
                type: "uint256",
            },
        ],
        name: "swapWithExactTarget",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IDEX__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IDEX__factory = IDEX__factory;
IDEX__factory.abi = _abi;
