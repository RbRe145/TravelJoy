import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { InterfaceIncentives, InterfaceIncentivesInterface } from "../../../contracts/incentives/InterfaceIncentives";
export declare class InterfaceIncentives__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "enum InterfaceIncentives.PoolId";
            readonly name: "pool";
            readonly type: "uint8";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "poolCurrencyId";
            readonly type: "address";
        }];
        readonly name: "ClaimedRewards";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "DepositedShare";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "WithdrewShare";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum InterfaceIncentives.PoolId";
            readonly name: "pool";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "poolCurrencyId";
            readonly type: "address";
        }];
        readonly name: "claimRewards";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "depositDexShare";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum InterfaceIncentives.PoolId";
            readonly name: "pool";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "poolCurrencyId";
            readonly type: "address";
        }];
        readonly name: "getClaimRewardDeductionRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum InterfaceIncentives.PoolId";
            readonly name: "pool";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "poolCurrencyId";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "rewardCurrencyId";
            readonly type: "address";
        }];
        readonly name: "getIncentiveRewardAmount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "currencyIds";
            readonly type: "address[]";
        }, {
            readonly internalType: "enum InterfaceIncentives.PoolId";
            readonly name: "pool";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "poolCurrencyId";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "who";
            readonly type: "address";
        }];
        readonly name: "getPendingRewards";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "currencyId";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "withdrawDexShare";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): InterfaceIncentivesInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): InterfaceIncentives;
}
