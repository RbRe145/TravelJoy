"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.U32_MAX = exports.GAS_LIMIT_CHUNK = exports.STORAGE_MASK = exports.GAS_MASK = exports.ONE_THOUSAND_GWEI = exports.ONE_HUNDRED_GWEI = exports.TEN_GWEI = exports.ONE_GWEI = exports.MAX_GAS_LIMIT_CC = exports.BLOCK_STORAGE_LIMIT = exports.BLOCK_GAS_LIMIT = exports.ORPHAN_TX_DEFAULT_INFO = exports.CACHE_SIZE_WARNING = exports.SAFE_MODE_WARNING_MSG = exports.PROD_MODE_MSG = exports.LOCAL_MODE_MSG = exports.ERC20_ABI = exports.ERROR_PATTERN = exports.EMTPY_UNCLES = exports.EMTPY_UNCLE_HASH = exports.ZERO_BLOCK_HASH = exports.DUMMY_BLOCK_NONCE = exports.DUMMY_V_R_S = exports.DUMMY_S = exports.DUMMY_R = exports.DUMMY_V = exports.DUMMY_LOGS_BLOOM = exports.DUMMY_ADDRESS = exports.DUMMY_BLOCK_HASH = exports.U64MAX = exports.U32MAX = exports.MAX_PRIORITY_FEE_PER_GAS = exports.MAX_FEE_PER_GAS = exports.GAS_PRICE = exports.BIGNUMBER_ZERO = exports.EMPTY_HEX_STRING = exports.BIGNUMBER_ONE = exports.ZERO = void 0;
const bignumber_1 = require("@ethersproject/bignumber");
exports.ZERO = 0;
exports.BIGNUMBER_ONE = bignumber_1.BigNumber.from(1);
exports.EMPTY_HEX_STRING = '0x';
exports.BIGNUMBER_ZERO = bignumber_1.BigNumber.from(exports.ZERO);
exports.GAS_PRICE = exports.BIGNUMBER_ONE;
exports.MAX_FEE_PER_GAS = exports.BIGNUMBER_ONE;
exports.MAX_PRIORITY_FEE_PER_GAS = exports.BIGNUMBER_ONE;
exports.U32MAX = bignumber_1.BigNumber.from('0xffffffff');
exports.U64MAX = bignumber_1.BigNumber.from('0xffffffffffffffff');
exports.DUMMY_BLOCK_HASH = '0xdummydummy';
exports.DUMMY_ADDRESS = '0x1111111111333333333355555555558888888888';
exports.DUMMY_LOGS_BLOOM = '0x
exports.DUMMY_V = '0x25';
exports.DUMMY_R = '0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea';
exports.DUMMY_S = '0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c';
exports.DUMMY_V_R_S = {
    v: exports.DUMMY_V,
    r: exports.DUMMY_R,
    s: exports.DUMMY_S,
};
exports.DUMMY_BLOCK_NONCE = '0x0000000000000000';
exports.ZERO_BLOCK_HASH = '0x0000000000000000000000000000000000000000000000000000000000000000';
exports.EMTPY_UNCLE_HASH = '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';
exports.EMTPY_UNCLES = [];
exports.ERROR_PATTERN = [
    // Assume that Error is nested only once
    /execution fatal: Module\(ModuleError { index: (\d+), error: \[(\d+), 0, 0, 0\], message: None }\)/,
    /execution fatal: Module\(ModuleError { index: (\d+), error: (\d+), message: None }\)/,
];
exports.ERC20_ABI = [
    // Read-Only Functions
    'function balanceOf(address owner) view returns (uint256)',
    'function decimals() view returns (uint8)',
    'function symbol() view returns (string)',
    // Authenticated Functions
    'function transfer(address to, uint amount) returns (bool)',
    // Events
    'event Transfer(address indexed from, address indexed to, uint amount)',
];
exports.LOCAL_MODE_MSG = `
  -------------------------------
  üî® local development mode is ON
  ‚ùå don't use it for production!
  -------------------------------
`;
exports.PROD_MODE_MSG = `
  ------------------------------------------
  ‚ö°Ô∏è running in production (standard) mode ‚ö°Ô∏è
  ------------------------------------------
`;
exports.SAFE_MODE_WARNING_MSG = `
  ------------------------------- WARNING -----------------------------
  üîí SafeMode is ON, and RPCs behave very differently than usual world!
  ‚ùó This mode is DEPRECATED, please use \`finalized\` block tag 
  ---------------------------------------------------------------------
`;
exports.CACHE_SIZE_WARNING = `
  ------------------- WARNING -------------------
  Max cached blocks is big, please be cautious!
  If memory exploded, try decrease MAX_CACHE_SIZE
  -----------------------------------------------
`;
exports.ORPHAN_TX_DEFAULT_INFO = {
    value: '0x0',
    gas: 2100000,
    input: '0x',
    nonce: 0,
    ...exports.DUMMY_V_R_S,
};
exports.BLOCK_GAS_LIMIT = 29990016;
exports.BLOCK_STORAGE_LIMIT = 3670016;
exports.MAX_GAS_LIMIT_CC = 21; // log2(BLOCK_STORAGE_LIMIT)
exports.ONE_GWEI = 1000000000n;
exports.TEN_GWEI = exports.ONE_GWEI * 10n;
exports.ONE_HUNDRED_GWEI = exports.ONE_GWEI * 100n;
exports.ONE_THOUSAND_GWEI = exports.ONE_GWEI * 1000n;
exports.GAS_MASK = 100000;
exports.STORAGE_MASK = 100;
exports.GAS_LIMIT_CHUNK = bignumber_1.BigNumber.from(30000);
exports.U32_MAX = 4294967295n;
