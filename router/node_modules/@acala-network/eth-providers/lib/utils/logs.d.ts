import { BlockTag, Log } from '@ethersproject/abstract-provider';
import { Log as LogGQL } from './gqlTypes';
export declare type AddressFilter = string | string[] | undefined;
export declare type TopicsFilter = (string | string[] | null)[] | undefined;
export interface BaseLogFilter {
    address?: AddressFilter;
    topics?: TopicsFilter;
}
export interface LogFilter extends BaseLogFilter {
    fromBlock?: BlockTag;
    toBlock?: BlockTag;
    blockHash?: string;
}
export interface SanitizedLogFilter extends BaseLogFilter {
    fromBlock?: number;
    toBlock?: number;
}
export declare const filterLogByTopics: (log: Log, topics: (string | string[])[]) => boolean;
export declare const filterLogByAddress: (log: Log, targetAddr: AddressFilter) => boolean;
export declare const filterLog: (log: Log, filter: BaseLogFilter) => boolean;
export declare const buildLogsGqlFilter: (filter: SanitizedLogFilter) => string;
export declare const adaptLogs: (logs: LogGQL[]) => Log[];
export declare const LOGS_NODES = "\n  nodes {\n    blockNumber,\n    blockHash,\n    transactionIndex,\n    removed,\n    address,\n    data,\n    topics,\n    transactionHash,\n    logIndex,\n  }\n";
export declare const TX_RECEIPT_NODES: string;
