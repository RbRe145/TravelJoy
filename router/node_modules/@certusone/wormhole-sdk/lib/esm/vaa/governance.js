var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { parseVaa } from "./wormhole";
export function parseGovernanceVaa(vaa) {
    var parsed = parseVaa(vaa);
    return __assign(__assign({}, parsed), parseGovernancePayload(parsed.payload));
}
export function parseGovernancePayload(payload) {
    var module = payload.subarray(0, 32).toString().replace(/\0/g, "");
    var action = payload.readUInt8(32);
    var chain = payload.readUInt16BE(33);
    var orderPayload = payload.subarray(35);
    return {
        module: module,
        action: action,
        chain: chain,
        orderPayload: orderPayload,
    };
}
