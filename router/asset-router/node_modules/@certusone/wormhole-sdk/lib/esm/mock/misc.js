import { keccak256 } from "../utils";
import * as elliptic from "elliptic";
export function ethPrivateToPublic(key) {
    var ecdsa = new elliptic.ec("secp256k1");
    var publicKey = ecdsa.keyFromPrivate(key).getPublic("hex");
    return keccak256(Buffer.from(publicKey, "hex").subarray(1)).subarray(12);
}
export function ethSignWithPrivate(privateKey, hash) {
    if (hash.length != 32) {
        throw new Error("hash.length != 32");
    }
    var ecdsa = new elliptic.ec("secp256k1");
    var key = ecdsa.keyFromPrivate(privateKey);
    return key.sign(hash, { canonical: true });
}
