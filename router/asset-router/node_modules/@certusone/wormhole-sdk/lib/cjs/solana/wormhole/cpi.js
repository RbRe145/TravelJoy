"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPostMessageCpiAccounts = exports.getWormholeDerivedAccounts = void 0;
var accounts_1 = require("./accounts");
var instructions_1 = require("./instructions");
/**
 * Generate Wormhole PDAs.
 *
 * @param cpiProgramId
 * @param wormholeProgramId
 * @returns
 */
function getWormholeDerivedAccounts(cpiProgramId, wormholeProgramId) {
    var _a = accounts_1.getEmitterKeys(cpiProgramId, wormholeProgramId), wormholeEmitter = _a.emitter, wormholeSequence = _a.sequence;
    return {
        wormholeBridge: accounts_1.deriveWormholeBridgeDataKey(wormholeProgramId),
        wormholeEmitter: wormholeEmitter,
        wormholeSequence: wormholeSequence,
        wormholeFeeCollector: accounts_1.deriveFeeCollectorKey(wormholeProgramId),
    };
}
exports.getWormholeDerivedAccounts = getWormholeDerivedAccounts;
/**
 * Generate accounts needed to perform `post_message` instruction
 * as cross-program invocation.
 *
 * @param cpiProgramId
 * @param wormholeProgramId
 * @param payer
 * @param message
 * @returns
 */
function getPostMessageCpiAccounts(cpiProgramId, wormholeProgramId, payer, message) {
    var accounts = instructions_1.getPostMessageAccounts(wormholeProgramId, payer, cpiProgramId, message);
    return {
        payer: accounts.payer,
        wormholeBridge: accounts.bridge,
        wormholeMessage: accounts.message,
        wormholeEmitter: accounts.emitter,
        wormholeSequence: accounts.sequence,
        wormholeFeeCollector: accounts.feeCollector,
        clock: accounts.clock,
        rent: accounts.rent,
        systemProgram: accounts.systemProgram,
    };
}
exports.getPostMessageCpiAccounts = getPostMessageCpiAccounts;
