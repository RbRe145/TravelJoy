import { Code } from "@certusone/wormhole-sdk-proto-web/node_modules/@improbable-eng/grpc-web/dist/typings/Code";
import { MethodDefinition } from "@certusone/wormhole-sdk-proto-web/node_modules/@improbable-eng/grpc-web/dist/typings/service";
import { Metadata } from "@certusone/wormhole-sdk-proto-web/node_modules/@improbable-eng/grpc-web/dist/typings/metadata";
import { RpcOptions } from "@certusone/wormhole-sdk-proto-web/node_modules/@improbable-eng/grpc-web/dist/typings/client";
import { ProtobufMessage } from "@certusone/wormhole-sdk-proto-web/node_modules/@improbable-eng/grpc-web/dist/typings/message";
export interface Request {
    close: () => void;
}
export interface InvokeRpcOptions<TRequest extends ProtobufMessage, TResponse extends ProtobufMessage> extends RpcOptions {
    host: string;
    request: TRequest;
    metadata?: Metadata.ConstructorArg;
    onHeaders?: (headers: Metadata) => void;
    onMessage?: (res: TResponse) => void;
    onEnd: (code: Code, message: string, trailers: Metadata) => void;
}
export declare function invoke<TRequest extends ProtobufMessage, TResponse extends ProtobufMessage, M extends MethodDefinition<TRequest, TResponse>>(methodDescriptor: M, props: InvokeRpcOptions<TRequest, TResponse>): Request;
