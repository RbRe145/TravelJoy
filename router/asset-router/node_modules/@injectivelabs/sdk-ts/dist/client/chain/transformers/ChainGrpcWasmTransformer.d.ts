import { QueryAllContractStateResponse, QueryCodeResponse, QueryCodesResponse, QueryContractHistoryResponse, QueryContractsByCodeResponse } from '@injectivelabs/chain-api/cosmwasm/wasm/v1/query_pb';
import { ContractAccountsBalanceWithPagination, ContractCodeHistoryEntry, ContractInfo, GrpcContractCodeHistoryEntry, grpcContractInfo, CodeInfoResponse, GrpcCodeInfoResponse } from '@injectivelabs/sdk-ts/src/client/chain/types/wasm';
/**
 * @category Chain Grpc Transformer
 */
export declare class ChainGrpcWasmTransformer {
    static allContractStateResponseToContractAccountsBalanceWithPagination(response: QueryAllContractStateResponse): ContractAccountsBalanceWithPagination;
    static contactInfoResponseToContractInfo(contractInfo: grpcContractInfo): ContractInfo;
    static grpcContractCodeHistoryEntryToContractCodeHistoryEntry(entry: GrpcContractCodeHistoryEntry): ContractCodeHistoryEntry;
    static grpcCodeInfoResponseToCodeInfoResponse(info: GrpcCodeInfoResponse): CodeInfoResponse;
    static contactHistoryResponseToContractHistory(response: QueryContractHistoryResponse): {
        entriesList: ContractCodeHistoryEntry[];
        pagination: import("@injectivelabs/sdk-ts/src").Pagination;
    };
    static contractCodesResponseToContractCodes(response: QueryCodesResponse): {
        codeInfosList: CodeInfoResponse[];
        pagination: import("@injectivelabs/sdk-ts/src").Pagination;
    };
    static contractCodeResponseToContractCode(response: QueryCodeResponse): {
        codeInfo: CodeInfoResponse;
        data: string | Uint8Array;
    };
    static contractByCodeResponseToContractByCode(response: QueryContractsByCodeResponse): {
        contractsList: string[];
        pagination: import("@injectivelabs/sdk-ts/src").Pagination;
    };
}
//# sourceMappingURL=ChainGrpcWasmTransformer.d.ts.map