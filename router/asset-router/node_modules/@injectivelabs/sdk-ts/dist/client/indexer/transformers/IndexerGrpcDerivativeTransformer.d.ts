import { GrpcDerivativeMarketInfo, GrpcDerivativeLimitOrder, GrpcDerivativeTrade, DerivativeMarket, DerivativeLimitOrder, DerivativeTrade, PositionDelta, GrpcDerivativePosition, Position, GrpcPositionDelta, PerpetualMarketInfo, GrpcPerpetualMarketInfo, GrpcPerpetualMarketFunding, PerpetualMarketFunding, GrpcExpiryFuturesMarketInfo, GrpcFundingPayment, GrpcFundingRate, FundingPayment, FundingRate, ExpiryFuturesMarketInfo, GrpcBinaryOptionsMarketInfo, BinaryOptionsMarket, GrpcDerivativeOrderHistory, DerivativeOrderHistory } from '@injectivelabs/sdk-ts/src/client/indexer/types/derivatives';
import { GrpcPriceLevel, Orderbook, PriceLevel, GrpcTokenMeta, IndexerTokenMeta, OrderbookWithSequence } from '@injectivelabs/sdk-ts/src/client/indexer/types/exchange';
import { FundingPaymentsResponse, FundingRatesResponse, MarketsResponse as DerivativeMarketsResponse, MarketResponse as DerivativeMarketResponse, OrderbookResponse as DerivativeOrderbookResponse, OrdersResponse as DerivativeOrdersResponse, OrdersHistoryResponse as DerivativeOrdersHistoryResponse, TradesResponse as DerivativeTradesResponse, PositionsResponse as DerivativePositionsResponse, OrderbooksResponse as DerivativeOrderbooksResponse, OrderbooksV2Response as DerivativeOrderbooksV2Response, OrderbookV2Response as DerivativeOrderbookV2Response, SubaccountTradesListResponse as DerivativeSubaccountTradesListResponse } from '@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb';
import { BinaryOptionsMarketsResponse as BinaryOptionsMarketsResponse, BinaryOptionsMarketResponse as BinaryOptionsMarketResponse } from '@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb';
/**
 * @category Indexer Grpc Transformer
 */
export declare class IndexerGrpcDerivativeTransformer {
    static grpcTokenMetaToTokenMeta(tokenMeta: GrpcTokenMeta | undefined): IndexerTokenMeta | undefined;
    static grpcPerpetualMarketInfoToPerpetualMarketInfo(perpetualMarketInfo: GrpcPerpetualMarketInfo | undefined): PerpetualMarketInfo | undefined;
    static grpcPerpetualMarketFundingToPerpetualMarketFunding(perpetualMarketFunding: GrpcPerpetualMarketFunding | undefined): PerpetualMarketFunding | undefined;
    static grpcExpiryFuturesMarketInfoToExpiryFuturesMarketInfo(expiryFuturesMarketInfo: GrpcExpiryFuturesMarketInfo | undefined): ExpiryFuturesMarketInfo | undefined;
    static marketResponseToMarket(response: DerivativeMarketResponse): DerivativeMarket;
    static marketsResponseToMarkets(response: DerivativeMarketsResponse): DerivativeMarket[];
    static ordersResponseToOrders(response: DerivativeOrdersResponse): {
        orders: DerivativeLimitOrder[];
        pagination: import("@injectivelabs/sdk-ts/src").ExchangePagination;
    };
    static orderHistoryResponseToOrderHistory(response: DerivativeOrdersHistoryResponse): {
        orderHistory: DerivativeOrderHistory[];
        pagination: import("@injectivelabs/sdk-ts/src").ExchangePagination;
    };
    static positionsResponseToPositions(response: DerivativePositionsResponse): {
        positions: Position[];
        pagination: import("@injectivelabs/sdk-ts/src").ExchangePagination;
    };
    static tradesResponseToTrades(response: DerivativeTradesResponse): {
        trades: DerivativeTrade[];
        pagination: import("@injectivelabs/sdk-ts/src").ExchangePagination;
    };
    static subaccountTradesListResponseToSubaccountTradesList(response: DerivativeSubaccountTradesListResponse): DerivativeTrade[];
    static fundingPaymentsResponseToFundingPayments(response: FundingPaymentsResponse): {
        fundingPayments: FundingPayment[];
        pagination: import("@injectivelabs/sdk-ts/src").ExchangePagination;
    };
    static fundingRatesResponseToFundingRates(response: FundingRatesResponse): {
        fundingRates: FundingRate[];
        pagination: import("@injectivelabs/sdk-ts/src").ExchangePagination;
    };
    static orderbookResponseToOrderbook(response: DerivativeOrderbookResponse): Orderbook;
    static orderbookV2ResponseToOrderbookV2(response: DerivativeOrderbookV2Response): OrderbookWithSequence;
    static orderbooksResponseToOrderbooks(response: DerivativeOrderbooksResponse): {
        marketId: string;
        orderbook: Orderbook;
    }[];
    static orderbooksV2ResponseToOrderbooksV2(response: DerivativeOrderbooksV2Response): {
        marketId: string;
        orderbook: OrderbookWithSequence;
    }[];
    static binaryOptionsMarketResponseToBinaryOptionsMarket(response: BinaryOptionsMarketResponse): BinaryOptionsMarket;
    static binaryOptionsMarketResponseWithPaginationToBinaryOptionsMarket(response: BinaryOptionsMarketsResponse): {
        markets: BinaryOptionsMarket[];
        pagination: import("@injectivelabs/sdk-ts/src").ExchangePagination;
    };
    static binaryOptionsMarketsResponseToBinaryOptionsMarkets(response: BinaryOptionsMarketsResponse): BinaryOptionsMarket[];
    static grpcBinaryOptionsMarketToBinaryOptionsMarket(market: GrpcBinaryOptionsMarketInfo): BinaryOptionsMarket;
    static grpcBinaryOptionsMarketsToBinaryOptionsMarkets(markets: GrpcBinaryOptionsMarketInfo[]): BinaryOptionsMarket[];
    static grpcMarketToMarket(market: GrpcDerivativeMarketInfo): DerivativeMarket;
    static grpcMarketsToMarkets(markets: GrpcDerivativeMarketInfo[]): DerivativeMarket[];
    static grpcPositionDeltaToPositionDelta(positionDelta: GrpcPositionDelta): PositionDelta;
    static grpcPriceLevelToPriceLevel(priceLevel: GrpcPriceLevel): PriceLevel;
    static grpcPriceLevelsToPriceLevels(priceLevels: GrpcPriceLevel[]): PriceLevel[];
    static grpcOrderbookToOrderbook({ buys, sells, }: {
        buys: GrpcPriceLevel[];
        sells: GrpcPriceLevel[];
    }): Orderbook;
    static grpcOrderbookV2ToOrderbookV2({ sequence, buys, sells, }: {
        sequence: number;
        buys: GrpcPriceLevel[];
        sells: GrpcPriceLevel[];
    }): OrderbookWithSequence;
    static grpcOrderToOrder(order: GrpcDerivativeLimitOrder): DerivativeLimitOrder;
    static grpcOrdersToOrders(orders: GrpcDerivativeLimitOrder[]): DerivativeLimitOrder[];
    static grpcOrderHistoryToOrderHistory(orderHistory: GrpcDerivativeOrderHistory): DerivativeOrderHistory;
    static grpcOrderHistoryListToOrderHistoryList(orderHistory: GrpcDerivativeOrderHistory[]): DerivativeOrderHistory[];
    static grpcPositionToPosition(position: GrpcDerivativePosition): Position;
    static grpcPositionsToPositions(positions: GrpcDerivativePosition[]): Position[];
    static grpcTradeToTrade(trade: GrpcDerivativeTrade): DerivativeTrade;
    static grpcTradesToTrades(trades: GrpcDerivativeTrade[]): DerivativeTrade[];
    static grpcFundingPaymentToFundingPayment(fundingPayment: GrpcFundingPayment): FundingPayment;
    static grpcFundingPaymentsToFundingPayments(fundingPayments: GrpcFundingPayment[]): FundingPayment[];
    static grpcFundingRateToFundingRate(fundingRate: GrpcFundingRate): FundingRate;
    static grpcFundingRatesToFundingRates(fundingRates: GrpcFundingRate[]): FundingRate[];
}
//# sourceMappingURL=IndexerGrpcDerivativeTransformer.d.ts.map